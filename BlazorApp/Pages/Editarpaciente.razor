@using BlazorApp.Services;
@using DtoModels;

@page "/pacientes/editarpaciente/{id:int}"

@inject ApiService apiService

<h3>Editar Paciente</h3>

@if(paciente == null)
{
    <p>Aguarde...</p>
}
else
{
    <EditForm Model="paciente" OnValidSubmit="AtualizarPaciente">
        <div class="form-group">
            <label for="Nome">Nome</label>
            <input type="text" class="form-control" id="Nome" @bind="paciente.Nome" />
        </div>
        <div class="form-group">
            <label for="DataNascimento">Data de Nascimento</label>
            <input type="date" min="@DateTime.Now.AddYears(-150).ToString("yyyy-MM-dd")" max="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" id="DataNascimento" @bind="paciente.DataNascimento" />
        </div>
        <div class="form-group">
            <label>Sexo</label>
            <div class="form-check">
                <input type="radio" @bind="paciente.Genero" @oninput="() => paciente.Genero = PacienteDto._Genero.Masculino" /> Masculino
            </div>
            <div class="form-check">
                <input type="radio" @bind="paciente.Genero" @oninput="() => paciente.Genero = PacienteDto._Genero.Feminino" /> Feminino
            </div>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    </EditForm>
}

@code {
    private PacienteDto paciente;

    [Parameter]
    public int id { get; set; }

    [Inject]
    private NavigationManager _navigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        paciente = await apiService.GetPaciente(id);
    }

    private async Task AtualizarPaciente()
    {
        await apiService.UpdatePaciente(id, paciente);
        _navigationManager.NavigateTo("/pacientes");
    }
}
